#Directory must be set
#SET (STM32Cube_DIR "/home/arun/Aruns_Workspace/CUBE_REPO/STM32Cube_FW_L4_V1.15.0")

SET(HAL_COMPONENTS cortex dma exti flash gpio hsem i2c ipcc pwr rcc rtc sai tim uart ) 
# Components that have _ex sources
SET(HAL_EX_COMPONENTS dma flash pwr rcc sai i2c tim uart)

SET(HAL_REQUIRED_COMPONENTS cortex pwr rcc )

SET(HAL_HEADERS
	${HAL_PREFIX}hal.h
	${HAL_PREFIX}hal_def.h
)

SET(HAL_SOURCES
	${HAL_PREFIX}hal.c
)

IF(NOT STM32WBHAL_FIND_COMPONENTS)
    SET(STM32HAL_FIND_COMPONENTS ${HAL_COMPONENTS})
    MESSAGE(STATUS "No STM32HAL components selected, using all: ${STM32HAL_FIND_COMPONENTS}")
ENDIF()


FOREACH(cmp ${HAL_REQUIRED_COMPONENTS})
    LIST(FIND STM32WBHAL_FIND_COMPONENTS ${cmp} STM32HAL_FOUND_INDEX)
    IF(${STM32HAL_FOUND_INDEX} LESS 0)
        LIST(APPEND STM32WBHAL_FIND_COMPONENTS ${cmp})
 #MESSAGE (STATUS " ${STM32WBHAL_FIND_COMPONENTS}")
    ENDIF()
ENDFOREACH()

FOREACH(cmp ${STM32WBHAL_FIND_COMPONENTS})
    LIST(FIND STM32WBHAL_FIND_COMPONENTS ${cmp} STM32HAL_FOUND_INDEX)
    IF(${cmp} STREQUAL "sdmmc"  OR ${cmp} STREQUAL "usb"  OR ${cmp} STREQUAL "fmc")
        LIST(APPEND HAL_HEADERS ${HAL_PREFIX}ll_${cmp}.h)
        LIST(APPEND HAL_SOURCES ${HAL_PREFIX}ll_${cmp}.c)
    ELSEIF(${STM32HAL_FOUND_INDEX} LESS 0)
        MESSAGE(FATAL_ERROR "Unknown STM32HAL component: ${cmp}. Available components: ${HAL_COMPONENTS}")
	ELSE()    
        LIST(APPEND HAL_HEADERS ${HAL_PREFIX}hal_${cmp}.h)
        LIST(APPEND HAL_SOURCES ${HAL_PREFIX}hal_${cmp}.c)
    ENDIF()
    LIST(FIND HAL_EX_COMPONENTS ${cmp} STM32HAL_FOUND_INDEX)
    IF(NOT (${STM32HAL_FOUND_INDEX} LESS 0))
        LIST(APPEND HAL_HEADERS ${HAL_PREFIX}hal_${cmp}_ex.h)
        LIST(APPEND HAL_SOURCES ${HAL_PREFIX}hal_${cmp}_ex.c)
    ENDIF()
ENDFOREACH()
# message("HAL_HEAD: ${HAL_HEADERS}")
# message(("HAL_SRC: ${HAL_SOURCES}"))

LIST(REMOVE_DUPLICATES HAL_HEADERS)
LIST(REMOVE_DUPLICATES HAL_SOURCES)

STRING(TOLOWER ${STM32_FAMILY} STM32_FAMILY_LOWER)

# Include All the HAL source File needed for the project 
FOREACH(HAL_SRC ${HAL_SOURCES})
    STRING(MAKE_C_IDENTIFIER "${HAL_SRC}" HAL_SRC_CLEAN)
    SET(HAL_${HAL_SRC_CLEAN}_FILE HAL_SRC_FILE-NOTFOUND)
    FIND_FILE(HAL_${HAL_SRC_CLEAN}_FILE ${HAL_SRC}
        PATH_SUFFIXES Src stm32${STM32_FAMILY_LOWER}
        PATHS ${STM32Cube_DIR}/Drivers/STM32${STM32_FAMILY}xx_HAL_Driver/ CMAKE_FIND_ROOT_PATH_BOTH
    )
    LIST(APPEND STM32HAL_SOURCES ${HAL_${HAL_SRC_CLEAN}_FILE})
    # message("HAL_SRC: ${STM32HAL_SOURCES}")
ENDFOREACH()

# Include All the HAL Include FilePath needed for the project
FOREACH(HAL_INC ${HAL_HEADERS})
    STRING(MAKE_C_IDENTIFIER "${HAL_INC}" HAL_INC_CLEAN)
    SET(HAL_${HAL_INC_CLEAN}_FILE HAL_INC_FILE-NOTFOUND)
    FIND_FILE(HAL_${HAL_INC_CLEAN}_FILE ${HAL_INC}
        PATH_SUFFIXES Inc stm32${STM32_FAMILY_LOWER}
        PATHS ${STM32Cube_DIR}/Drivers/STM32${STM32_FAMILY}xx_HAL_Driver/ CMAKE_FIND_ROOT_PATH_BOTH
    )
    GET_FILENAME_COMPONENT(_INCPATH ${HAL_${HAL_INC_CLEAN}_FILE} DIRECTORY)

    LIST(APPEND STM32HAL_INCLUDE_DIR ${_INCPATH})
    # message("${STM32HAL_INCLUDE_DIR}")
ENDFOREACH()
LIST(REMOVE_DUPLICATES STM32HAL_INCLUDE_DIR)

ADD_LIBRARY(HAL_LIB OBJECT ${STM32HAL_SOURCES} )
SET(HAL_LIBS "HAL_LIB" )

INCLUDE_DIRECTORIES(${STM32HAL_INCLUDE_DIR})


INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(STM32WBHAL DEFAULT_MSG STM32HAL_INCLUDE_DIR STM32HAL_SOURCES)
